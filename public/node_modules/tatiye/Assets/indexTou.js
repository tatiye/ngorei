import tatiyeNet,{
  modalEntri,
  useHandelIDTabel,
  openSSLKey,
  setModal,
  setFrom,
  useHandel
}  from "../es6.js"; 
import {setTab} from "./tab.js";
import {setDropdown} from "./dropdown.js";
import {setDropdownTabel} from "./dropdownTabel.js";
import {setfrom} from "./from.js";
import {setElement} from "./element.js";
import {setMyModal} from "./modal.js";
import {setModalStandar} from "./modalStandar.js";
import {setKeywords} from "./keywords.js";
import {setTabel} from "./tabel.js";
import {setElementFrom} from "./elementFrom.js";


export class Assets {
  constructor() {

    this.count        =0; 
    this._viewText ='';
  }



    tab(row) {
      setTab(row);
    } 
    dropdown(row) {
      setDropdown(row);
    } 
    tabel(row) {
      setTabel(row);
    } 
    modal(row){
      setMyModal(row);
    }
    modalStandar(row){
      setModalStandar(row);
    }
    keywords(row){
      setKeywords(row);
    }
    dropdownTabel(row){
      setDropdownTabel(row);
    }
    from(row){
      // console.log(row.storage[0])
      let storage={
         'label'    :row.storage[0],
         'tabel'    :row.storage[1],
         'segment'  :false,
         'az'       :'z',
         'key'      :row.storage[2],
         'model'    :false,
         'route'    :false,
         'content'  :false, //default,from,upload
         'page'     :'1',
       };
      setfrom(row,storage);
    }

    useHandel(row){
       this.count ++;
        let attribute=row.app+'-tatiye';
         const getAtr = document.querySelector(attribute); 
         let element =row.app+'-'+getAtr.getAttribute('element');
        var dabatabse=useHandel({
           "token"          :row.token,
            "storage"       :row.storage
          })
        if (row.console==true) {
            console.log(dabatabse)
        }
            /*
            |--------------------------------------------------------------------------
            | Initializes getAttribute 
            |--------------------------------------------------------------------------
            | Develover Tatiye.Net 2018
            | @Date 
            */
            /**
             * @param array  options the display options .
             * @param mixed  Block to generate a customized inside  content.
             */
             
             let setID='#'+getAtr.getAttribute('id');
             // $(setID).hide();
             var myTemplate='';
             dabatabse.storage.forEach(set => {
                 $(setID+" div").each(function( index ) {
                    if ($( this ).attr('name')) {
                     $(this).attr('id',$( this ).attr('name')+index+set.no)
                    }
                });
                $(setID+" p").each(function( index ) {
                    if ($( this ).attr('name')) {
                     $(this).attr('id',$( this ).attr('name')+index+set.no)
                    }
                });

                $(setID+" a").each(function(index) {
                    if ($( this ).attr('name')) {
                       $(this).attr('name',index+set.no)
                       $(this).attr('id',set.id)
                    }
                });
                $(setID+" dropdown").each(function(index) {
                    if ($(this).attr('name')) {
                        $(this).attr('id','down'+set.no)
                        $(this).attr('name',set.id)
                    }
                });

             // }
               myTemplate +=$(setID).html();
            });
             $(element).html(myTemplate) 
             //console.log(myTemplate)

            /*
            |--------------------------------------------------------------------------
            | Initializes Database 
            |--------------------------------------------------------------------------
            | Develover Tatiye.Net 2018
            | @Date 
            */
            /**
             * @param array  options the display options .
             * @param mixed  Block to generate a customized inside  content.
             */
             dabatabse.storage.forEach(set => {
                 
                 $(setID+"  p").each(function( index ) {
                   if ($( this ).attr('name')) {
                      var myId=$(this).attr('name')+index+set.no;
                      var myIdname=$(this).attr('name');
                      var myText=$(element +" #"+myId).html();
                      if ($(this).attr('textRight')) {
                         var textRight=$(this).attr('textRight');
                      } else {
                          var textRight='';
                      }
                      if ($(this).attr('textClass')) {
                         var textValue='<tx class="'+$(this).attr('textClass')+'">'+set[myIdname]+'</tx>';
                      } else {
                          var textValue=set[myIdname];
                      }  
                      $(element +" #"+myId).html(myText+' '+textValue+' '+textRight);
                   }
                });
                 $(setID+"  div").each(function( index ) {
                   if ($( this ).attr('name')) {
                      var myId=$(this).attr('name')+index+set.no;
                      var myIdname=$(this).attr('name');
                      var myText=$(element +" #"+myId).html();
                      if ($(this).attr('textRight')) {
                         var textRight=$(this).attr('textRight');
                      } else {
                          var textRight='';
                      }
                      if ($(this).attr('textClass')) {
                         var textValue='<tx class="'+$(this).attr('textClass')+'">'+set[myIdname]+'</tx>';
                      } else {
                          var textValue=set[myIdname];
                      }  
                      $(element +" #"+myId).html(myText+' '+textValue+' '+textRight);
                   }
                });
              
            });
           
    // return row;


    }
    element(row){
        setElement(row); 
    }

    myfromModal(from,setId='',elementFrom=''){
         setElementFrom(from,setId='',elementFrom=''); 
        // console.log(from)
      // var count++;
      this.count ++;
      var bsModal =from['tabel'].split('/');
      var header=from['title'];
      var content=from['content'];
      var width=from.storage[2];
      var ssltabel=bsModal[0];
      var az=from.storage[1];
      var route=bsModal[1];
      var segment=bsModal[2]; 
      var tabel =openSSLKey(bsModal[0]);
      var privacy=from.storage[3];
      // console.log(route)
   //    }

   if (from.property[2]) {
      var rowsetIData =useHandelIDTabel(tabel+','+from.property[1]);
      var expoTitel=rowsetIData[from.property[2]];
   } else {
      var expoTitel=from['title'];
      Cookies.set('pageItem', 1);
   }
      var itemPage=Cookies.get("pageItem");
      var basresheader ='fromAction'+expoTitel.replace(/[^A-Za-z0-9]/g, '')+this.count;
    
      // if (from.dropdown) {
      //   console.log('Ada')
      // } else {
      //   console.log('kosong')
      // }
  
      if (from.property[0]=='from') {
      setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':route,
           'tabel':tabel,
           'content':'fromAction',
           'element':'from',
           'page'   :itemPage,
           'setdata' :privacy,
          });
        if (content=='datatables') {
           setFromTables({
                   storage      :{
                     'label'    :from.storage[0],
                     'tabel'    :tabel,
                     'segment'  :segment,
                     'az'       :az,
                     'key'      :from.property[1],
                     'model'    :basresheader,
                     'route'    :route,
                     'content'  :'from', //Outside,QuickSend 
                     'page'     :itemPage,
                     'setdata'  :privacy //public,privacy 
                   },
                   action      :from.action
                });
        } else {
                setFrom({
                   storage      :{
                     'label'    :from.storage[0],
                     'tabel'    :tabel,
                     'segment'  :segment,
                     'az'       :az,
                     'key'      :from.property[1],
                     'model'    :basresheader,
                     'route'    :route,
                     'content'  :'from', //Outside,QuickSend 
                     'page'     :itemPage,
                     'setdata'  :privacy //public,privacy 
                   },
                   action      :from.action
                });
      }

     } else if (from.property[0]=='upload') {
      setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':route,
           'tabel':tabel,
           'content':'fromAction',
           'element':'upload',
           'page'   :itemPage,
           'setdata' :privacy,
          });

       if (content=='datatables') {

         setFromTables({
           storage      :{
             'headerId' :expoTitel,
             'label'    :from.storage[0],
             'tabel'    :tabel,
             'segment'  :segment,
             'az'       :az,
             'key'      :from.property[1],
             'model'    :basresheader,
             'route'    :route,
             'content'  :from.property[0], //Outside,QuickSend 
             'page'     :itemPage,
             'setdata'  :privacy //public,privacy 
           },
               action      :{
                   'filename'    :['images',  '12' ,'Images']
                 }
        });
       } else {
        setFrom({
           storage      :{
             'headerId' :expoTitel,
             'label'    :from.storage[0],
             'tabel'    :tabel,
             'segment'  :segment,
             'az'       :az,
             'key'      :from.property[1],
             'model'    :basresheader,
             'route'    :route,
             'content'  :from.property[0], //Outside,QuickSend 
             'page'     :itemPage,
             'setdata'  :privacy //public,privacy 
           },
               action      :{
                   'filename'    :['images',  '12' ,'Images']
                 }
        });
      }

      } else if (from.property[0]=='uploadFile') {
      setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':route,
           'tabel':tabel,
           'content':'fromAction',
           'element':'uploadFile',
           'page'   :itemPage,
           'setdata' :privacy,
          });
          if (content=='datatables') {
            setFromTables({
                     storage      :{
                         'label'    :from.storage[0],
                         'tabel'    :tabel,
                         'segment'  :segment,
                         'az'       :az,
                         'key'      :from.property[1],
                         'model'    :basresheader,
                         'route'    :route,
                         'content'  :'uploadFile', //Outside,QuickSend 
                         'page'     :itemPage,

                     },
                     action      :{
                         // TYPE INPUT
                         'filename'    :['file',  '12' ,'Images']
                       
                      },
            });
          } else {
            setFrom({
                     storage      :{
                         'label'    :from.storage[0],
                         'tabel'    :tabel,
                         'segment'  :segment,
                         'az'       :az,
                         'key'      :from.property[1],
                         'model'    :basresheader,
                         'route'    :route,
                         'content'  :'uploadFile', //Outside,QuickSend 
                         'page'     :itemPage,

                     },
                     action      :{
                         // TYPE INPUT
                         'filename'    :['file',  '12' ,'Images']
                       
                      },
            });
        }

     } else if (from.property[0]=='indikator') {
     setModal({
           'titel':'Buat Label',
           'width':'300px',
           'key'  :'add',
           'model':'Label',
           'route':route,
           'tabel':'appindikator',
           'content':'fromAction',
           'element':'from',
           'page'   :itemPage,
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :from.storage[0],
                       'tabel'    :'appindikator',
                       'segment'  :'indikator',
                       'az'       :'lb',
                       'key'      :'add',
                       'model'    :'Label',
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :itemPage,
                     },
                     action      :{
                          'name'       :['text',        '12' ,'Nama Label'],
                          'value'      :['hidden',      '12' ,'label'],
                      },
            });


     } else if (from.property[0]=='bookmark') {
     setModal({
           'titel':'Bookmark',
           'width':'500px',
           'key'  :'add',
           'model':'Bookmark',
           'route':route,
           'tabel':tabel,
           'content':'fromAction',
           'element':'from',
           'page'   :itemPage,
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :from.storage[0],
                       'tabel'    :'apparchive',
                       'segment'  :'book',
                       'az'       :'boo',
                       'key'      :'add',
                       'model'    :'Bookmark',
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :itemPage,
                     },
                     action      :{
                          'nama'            :['text',  '12' ,'Deskripsi'],
                          'deskripsi'       :['link',  '8' ,'URL Link'],
                          'categori'        :['hidden',      '12' ,'bookmark'],
                          'bookmark'        :['select','4','Categori','custom',['Link','youtube','facebook','github']],
    
                      },
            });


     } else if (from.property[0]=='devices') {
     setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :'add',
           'model':basresheader,
           'route':route,
           'tabel':tabel,
           'content':'fromAction',
           'element':'from',
           'page'   :itemPage,
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :from.storage[0],
                       'tabel'    :'apparchive',
                       'segment'  :'bookmark',
                       'az'       :az,
                       'key'      :'add',
                       'model'    :basresheader,
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :itemPage,
                     },
                     action      :{
                          'deskripsi'  :['textarea',    '12' ,'Isi Deskripsi dari '+setId[3]],
                          'nama'       :['hidden',      '12' ,expoTitel],
                          'categori'   :['hidden',      '12' ,setId[3]],
                          'keyid'      :['hidden',      '12' ,from.property[1]],
                          'nmtabel'    :['hidden',      '12' ,tabel],
                      },
            });
     } else if (from.property[0]=='office') {
      setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':route,
           'tabel':tabel,
           'content':'fromAction',
           'element':'office',
           'page'   :itemPage,
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :from.storage[0],
                       'tabel'    :tabel,
                       'segment'  :segment,
                       'az'       :az,
                       'key'      :from.property[1],
                       'model'    :basresheader,
                       'route'    :route,
                       'content'  :'office', 
                       'page'     :itemPage,
                       'syntax'   :setId[3],
                     },
                     action      :{
                         'filename'    :['import',  '12' ,'Images']
                      },
            });


     } else if (from.property[0]=='dompdf') {
      setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':route,
           'tabel':tabel,
           'content':'fromAction',
           'element':'dompdf',
           'page'   :itemPage,
           'setdata' :privacy,
          });
            setFrom({
                 storage      :{
                   'label'    :from.storage[0],
                   'tabel'    :tabel,
                   'segment'  :segment,
                   'az'       :az,
                   'model'    :basresheader,
                   'key'      :from.property[1],
                   'route'    :route,
                   'content'  :'dompdf', 
                   'page'     :itemPage,
                 }
            }); 

    } else if (from.property[0]=='route') {
       setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':from.property[3],
           'tabel':tabel,
           'content':'modal',
           'element':'get',
           'page'   :itemPage,
           'setdata' :privacy,
          });
    } else if (from.property[0]=='element') {
       
       //$("#li"+from.property[1]).append('<element id="'+from.property[1]+'">'+expoTitel+'</element>');
         $("#indexOn"+from.property[1]).append( `<div class="row row-xs" id="body${basresheader}"></div>`);
         $("#"+from.property[1]).hide();
       // console.log(from.property[1])
    } else if (from.property[0]=='detail') {
         Cookies.set('pageResender', basresheader);
         setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':from.property[3],
           'tabel':tabel,
           'content':'fromAction',
           'element':'get',
           'page'   :itemPage,
           'setdata' :privacy,
          });
       
    } else if (from.property[0]=='modal') {
         Cookies.set('pageResender', basresheader);
        // console.log(expoTitel)
         setModal({
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':from.property[3],
           'tabel':tabel,
           'content':'fromAction',
           'element':'get',
           'page'   :itemPage,
           'setdata' :privacy,
          });
       

    } else if (from.property[0]=='delete') {
         setModal({
           'titel':expoTitel,
           'width':'400px',
           'key'  :from.property[1],
           'model':basresheader,
           'route':from.property[3],
           'tabel':tabel,
           'content':'delete',
           'page'   :itemPage,
           'setdata' :privacy,
          });
     } else if (from.property[0]=='recycle') {

      setModal({
           'titel':expoTitel,
           'width':'400px',
           'key'  :from.property[1],
           'model':basresheader,
           'route':route,
           'tabel':tabel,
           'content':'recycle',
           'page'   :itemPage,
           'setdata' :privacy,
          });
    } else {

    }
   if (from.property[2]) {
        $("#headerTitel"+basresheader).html(expoTitel);
   }
   // BATAS
   // console.log(from.element)
   if (from.element) {
   return {
           'titel':expoTitel,
           'width':width,
           'key'  :from.property[1],
           'model':basresheader,
           'route':from.property[3],
           'tabel':tabel,
           'content':'fromAction',
           'element':'get',
           'page'   :itemPage,
           'setdata' :privacy,
          };
    }









    }
}



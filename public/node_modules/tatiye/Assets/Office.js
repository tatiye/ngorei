import tatiyeNet,{
modalEntri,
mainRouterId,
modalRouteFrom,
useHandel,
readmore,
useTabPages,
setTables,
useHandelSheet
}  from "../es6.js"; 
 // import '../pagination.min.js';
export function setOffice(row) {
    // console.log(row)

     if (row.db.primaryKey) {
       var primaryKey=row.db.primaryKey;
     } else {
       var primaryKey='';
     }
// console.log(row.key)
// console.log((row.db.tableHead.length-1))

    $(row.element+'> table').attr('id','tabel'+row.id);
    var atrID=$(row.element+'> table').attr('id');
    var atrIDstorage='#storage'+row.id;
    var atrIDstorageBac='storage'+row.id;
    if (row.db.selectData) {
        var myFrom=row.db.selectData.action;
    } else {
        var myFrom='';

    }
      let set=setTables(row.app)

      if (row.db.tabelFooter==false) {
        var tabelFooter=false 
        var sqtabelFooter=false
      } else {
        var tabelFooter=true;
        var sqtabelFooter=row.db.tabelFooter;
      }
      set.headTabel({
        'table'       :atrID,
        'dataTable'   :atrIDstorageBac,
        'tableHead'   :row.db.tableHead,
        'fromAction'  :row.db.fromAction,
        'tabelFooter' :tabelFooter,
        'myfrom'      :myFrom,
      });
  var Target=(row.db.tableHead.length-1);
      if (row.db.columnDefs) {
        var columnDefs=row.db.columnDefs;
      } else {
        var columnDefs=[ 
            {"td": 0,"className": "text-center"}
            ];
      }

      if (row.db.useClick) {
         var setRender2='';
         var setRender={
                    "targets": Target,
                    "width": "10%",
                    "className": "text-center",
                   
                     render: function (data, type, rowData) {
                         var template='';
                         $.each(row.db.useClick,function(use, menu){
                            var desain=`
                            <a  onclick="useClickOffice(['${menu[0]}','${rowData[Target]}','${menu[2]}','${menu[3]}','${menu[4]}']);" href="javascript:void(0);">
                                <i style="color: #596882;"class="icon-feather-${use}"></i>
                            </a>`;
                            template +=desain;
                         });
                         return template;                                
                       }

          };
      } else {
         if (row.db.dropdown) {
         var setRender2='';
         var setRender={
                    "targets": Target,
                    "width": "10%",
                    "className": "text-center",
                   
                     render: function (data, type, rowData) {
                         var template='';
                         $.each(row.db.dropdown,function(use, menu){
                            var desain=`
                            <a class="dropdown-item share"  onclick="useClickOffice(['${menu[0]}','${rowData[Target]}','${menu[2]}','${menu[4]}','${menu[5]}','${menu[6]}']);" href="javascript:void(0);">
                                <i style="color: #596882;"class="icon-feather-${menu[3]}"></i> ${use}
                            </a>`;
                            template +=desain;
                         });
                         var setdropdown=`
                           <a href="javascript:void(0);" class="dropdown-link pull-right" data-toggle="dropdown"><i class="feat feat-more-vertical"></i></a>
                           <div class="dropdown-menu">
                               ${template}
                           </div>`;
                         return setdropdown;                                
                       }
          };
         } else if (row.db.useDevices) {
         let handelSheet=useHandelSheet("m7v/A0fDcjrThr/V3d43Fg,userid='"+tatiyeNet.uid+"' AND value='label'");
         var setRender2='';
         var setRender={
                    "targets": Target,
                    "width": "10%",
                    "className": "text-center",
                     render: function (datas, type, rowData) {

                        var setRenderLabel='';
                        $.each(handelSheet.data,function(uses, label){
                            var desain=`
                                   <li class="menu-item">
                                        <a onclick="useClickOffice(['label','${rowData[Target]}','${row.db.fromAction.storage[4]}','${label['kode']}','${label['deskripsi']}']);" href="javascript:void(0);" class="menu-button">
                                             <i class="feat feat-folder feat-scale-18 mr-10px"></i>
                                             <span>${label['deskripsi']}</span>
                                        </a>
                                   </li>`;
                               setRenderLabel +=desain;
                       });
                         var template='';
                         var templaterecycle='';
                         $.each(row.db.useDevices,function(use, menu){
                            if (menu[0] =='delete') {
                             var desain=`
                                <li class="menu-item">
                                        <a onclick="useClickOffice(['${menu[0]}','${rowData[Target]}','${menu[2]}','${menu[4]}','${menu[5]}','${menu[6]}']);"href="javascript:void(0);" class="menu-button">
                                              <i class="feat feat-${menu[3]} feat-scale-18 mr-10px"></i>
                                            <span>${use}</span>
                                          
                                            </a>
                                        </li>`;
                            templaterecycle +=desain;
                            } else if (menu[0] =='recycle') {
                             var desain=`
                                <li class="menu-item">
                                        <a onclick="useClickOffice(['${menu[0]}','${rowData[Target]}','${menu[2]}','${menu[4]}','${menu[5]}','${menu[6]}']);"href="javascript:void(0);" class="menu-button">
                                              <i class="feat feat-${menu[3]} feat-scale-18 mr-10px"></i>
                                            <span>${use}</span>
                                          
                                            </a>
                                        </li>`;
                            templaterecycle +=desain;
                            } else {
                             var desain=`
                                <li class="menu-item">
                                        <a onclick="useClickOffice(['${menu[0]}','${rowData[Target]}','${menu[2]}','${menu[4]}','${menu[5]}','${menu[6]}']);"href="javascript:void(0);" class="menu-button">
                                              <i class="feat feat-${menu[3]} feat-scale-18 mr-10px"></i>
                                            <span>${use}</span>
                                          
                                            </a>
                                        </li>`;
                            template +=desain;
                            }
                         });
                         var setdropdown=`
                           <a href="javascript:void(0);" class="dropdown-link pull-right" data-toggle="dropdown"><i class="feat feat-more-vertical"></i></a>
                           <div style="padding-right:230px;border-color: rgb(131 146 165 / 0%);box-shadow: 0 0 8px 2px rgb(28 39 60 / 0%);"class="dropdown-menu">
                            <div style="margin-top:-30px;"" class="menu">

                                       <ul class="menu-list">
                                            <li class="menu-item">
                                                <span class="menu-button">
                                                    <i class="feat feat-archive feat-scale-18"></i> <span class="bold pl-10px"> ${readmore(rowData[1],15)}</span>
                                                </span>
                                            </li>
                                       </ul>
                                     
                                    <ul class="menu-list">
                                    ${template}
                                    </ul>
                                   

                                    <ul class="menu-list">
                                        <li class="menu-item">
                                             <a onclick="useClickOffice(['archive','${rowData[Target]}','${row.db.fromAction.storage[4]}']);"href="javascript:void(0);" class="menu-button">
                                               <i class="feat feat-save feat-scale-18 mr-10px"></i>
                                               <span>Archive... </span>
                                               <span>CTRL+S </span>
                                              </a>
                                            </li>
                                            <li class="menu-item">
                                               <a  onclick="useClickOffice(['spam','${rowData[Target]}','${row.db.fromAction.storage[4]}']);"href="javascript:void(0);" class="menu-button">
                                                 <i class="feat feat-slash feat-scale-18 mr-10px"></i>
                                                  <span>Spam</span><span>CTRL+P </span>
                                                </a>
                                            </li>
                                    </ul>
                             
                                    <ul class="menu-list">
                                            <li class="menu-item">
                                            <span   class="menu-button">
                                                 <i class="feat feat-folder feat-scale-18"></i>
                                                    <span style="margin-left:10px; width:80%"> Label</span>
                                                 <i class="pull-right icon-feather-chevron-right"></i>
                                             </span>
                                                <ul class="menu-sub-list">
                                                    ${setRenderLabel}
                                                </ul>
                                            </li>
                               
                                    </ul>
                                     <ul class="menu-list">
                                      ${templaterecycle}
                                    </ul>
                                </div>
                           </div>`;
                         return setdropdown;    
                       }
          };
         } else {
         var setRender='';
         var setRender2={ 'visible': false, 'targets':[Target]};
         }
      }
   var myTable=$(atrIDstorage).DataTable({
         "processing"  :true,
         "serverSide" :false, // Aktif Jika 5juta Data
          "responsive": true,
         "dom"        :'B<"clear">lfrtip',
         "buttons"    :set.extend({
            'extend'     :true,
            'refresh'    :true,
            "filename"   :row.db.filename,
            "sheetData" :row.db.sheetData,
         }),
        "ajax": {
            "url":set.storage(),
            "type": 'GET',
            "headers": { 
              'Authorization':set.authorization(),
              'key':row.key 
            }
        },
           "columnDefs" : [
               setRender,
               setRender2,
           ],

           
           'columns':columnDefs,
           "language": {
                 "searchPlaceholder": 'Search...',
                 "sSearch": '',
                 "lengthMenu": '_MENU_ ',
            },



       //MEMBUAT SUM TOTAL FOOTER
           "footerCallback": function (rowdata, data, start, end, display) {
             var api = this.api();
            // Remove the formatting to get integer data for summation
            var intVal = function (i) {
                return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
            };
     
            $.each(sqtabelFooter,function(index,setRow){
             var pageTotal = api
                .column(setRow, { page: 'current' })
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);
                $(api.column(setRow).footer()).html(pageTotal);
             });
            // Update footer
            $( api.column(1).footer() ).html('TOTAL');
          }
    });
    $('.dataTables_length select').select2({minimumResultsForSearch: Infinity });  
        if (row.db.selectData) {
            $.each(row.db.selectData.roleoption,function(index,row){
                  $(document).on(row[0], index, function(){
                    //console.log(this.value);
                      myTable
                       .columns(row[1])
                       .search(this.value)
                       .draw();
                   });
              });

        } 
      if (row.db.columnHide) {
        $.each(row.db.columnHide,function(use, menu){
            myTable.column(menu).visible(false);
        });
      } 
       

     window.reload=function (key) {
        $(".table").DataTable().ajax.reload( null, false);
     }
// END setDatatables
};

import tatiyeNet,{
modalEntri,
mainRouterId,
modalRouteFrom,
useHandel,
useTabPages,
useHandelID,
setModal,
setFrom,
useTabelToken,
components,
useHandelIDTabel,
itemSpinner,
setIndexedDB
}  from "../es6.js"; 
  let count = 0;
 // import '../pagination.min.js';
export function setElementOffice(data,property,key='') {
  //   console.log(property)

  const read=data.storage.fromAction;
  // console.log(read)
  // console.log(read.title)

   const app = new components();
   count++;
          var useToken='';
          var bsPacakge =''
          var setPackage='office';
          var setPackageTabel=data.tabel;

         if (property[1]=='add') {
              var expoModelTitel=read['title'];
         } else {
              var rowsetIData =useHandelIDTabel(setPackageTabel+','+property[1]);
              var expoModelTitel=rowsetIData[property[2]];    
         }


              var expoModel=expoModelTitel.replace(/[^A-Za-z0-9]/g, '')+count

          if (read['storage'][3]) {
                if (read['storage'][3]=='public') {
                   var privacy='public'; 
                } else {
                   var privacy='privacy|'+read['storage'][3]; 
                } 
             } else {
                   var privacy='public'; 
             }


 
   if (property[0]=='from') {
      setModal({
           'titel':expoModelTitel,
           'width':read['storage'][2],
           'key'  :property[1],
           'model':expoModel,
           'route':setPackage,
           'tabel':setPackageTabel,
           'content':'fromAction',
           'element':property[0],
           'page'   :read['limit'],
           'setdata' :privacy,
          });
                setFrom({
                   "storage"      :{
                     'label'    :true,
                     'tabel'    :setPackageTabel,
                     'segment'  :data.segment,
                     'az'       :read['storage'][1],
                     'key'      :property[1],
                     'model'    :expoModel,
                     'route'    :setPackage,
                     'content'  :'from', //Outside,QuickSend 
                     'page'     :read['limit'],
                     'setdata'  :privacy //public,privacy 
                   },
                   "action"      :read['action'],
                });
                /*
                |--------------------------------------------------------------------------
                | Initializes MODAL,TARGET BOOSTARP 
                |--------------------------------------------------------------------------
                | Develover Tatiye.Net 2018
                | @Date 
                */
                /**
                 * @param array  options the display options .
                 * @param mixed  Block to generate a customized inside  content.
                 */
           } else if (property[0]=='modal' || property[0]=='target'|| property[0]=='bootstrap') {
                const getAtr = document.querySelector(read['app']); 
                const getAtrElment = document.querySelector(read['atrID']+' '+getAtr.getAttribute('indexOn')); 
                let setAtrElment  ='element-'+getAtrElment.getAttribute('element')
                   let myDb=useHandel({
                       "token"    :read['token'],
                       "storage"       :{
                          "limit":1,
                          "page":1,
                          "keywords":property[1]
                       }
                 })

                 if (property[0]=='target') {
                      app.modalStandar({
                          "app":getAtrElment.getAttribute('element'),
                          "title"    :expoModelTitel,
                          "console"  :true,
                          "element":setAtrElment,
                          "property":property,
                          "token" :getAtr.getAttribute('token'),
                          "storage":myDb.storage,
                          "keywords":property[1],
                       })
                 } else if (property[0]=='bootstrap') {
                  // console.log(property[0])
                    const getElment = document.querySelector(setAtrElment); 
                    app.bootstrap({
                          "id":getElment.getAttribute('id'),
                          "modal":expoModel,
                          "bootstrap":getElment.getAttribute('bootstrap'),
                          "app":getAtrElment.getAttribute('element'),
                          "title"    :myDb.storage[0][property[2]],
                          "console"  :true,
                          "element":setAtrElment,
                          "property":property,
                          "token" :getAtr.getAttribute('token'),
                          "storage":myDb.storage,
                          "keywords":property[1],
                       })
                   
                 } else {
                      app.modalStandar({
                          "app":getAtrElment.getAttribute('element'),
                          "title"    :expoModelTitel,
                          "console"  :true,
                          "element":setAtrElment,
                          "property":property,
                          "token" :getAtr.getAttribute('token'),
                          "storage":myDb.storage,
                          "keywords":property[1],
                       })
                 }
       } else if (property[0]=='devices') {
              var appfile =useHandelIDTabel('appfile,'+property[1]);
              if (appfile['fileType'] =="png" || appfile['fileType'] =="jpg" || appfile['fileType'] =="jpeg") {
               setModal({
                   'titel':expoModelTitel,
                   'width':read['storage'][2],
                   'key'  :property[1],
                   'model':expoModel,
                   'route':setPackage,
                   'tabel':setPackageTabel,
                   'content':'fromAction',
                   'element':'images',
                   'filename':tatiyeNet.hostName+'/'+appfile['filename'],
                   'page'   :read['limit'],
                   'setdata' :privacy,
                  });
              } else if (appfile['fileType']=="pdf") {
               setModal({
                   'titel':expoModelTitel,
                   'width':"600px",
                   'key'  :property[1],
                   'model':expoModel,
                   'route':setPackage,
                   'tabel':setPackageTabel,
                   'content':'fromAction',
                   'element':'myURLPdf',
                   'filename':tatiyeNet.hostName+'/'+appfile['filename'],
                   'page'   :read['limit'],
                   'setdata' :privacy,
                  });
                }

        
       } else if (property[0]=='restore') {
            setModal({
               'titel':expoModelTitel,
               'width':'400px',
               'key'  :property[1],
               'model':expoModel,
               'route':setPackage,
               'tabel':setPackageTabel,
               'content':'restore',
               'element':"restore",
               'page'   :read['limit'],
               'setdata' :privacy,
              });  
       } else if (property[0]=='archive') {
        setModal({
           'titel':expoModelTitel,
           'width':'500px',
           'key'  :property[1],
           'model':expoModel,
           'route':setPackage,
           'tabel':setPackageTabel,
           'content':'fromAction',
           'element':"from",
           'page'   :read['limit'],
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :true,
                       'tabel'    :'apparchive',
                       'segment'  :'bookmark',
                       'az'       :'a',
                       'key'      :'add',
                       'model'    :expoModel,
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :1,
                     },
                     action      :{
                          'deskripsi'  :['textarea',    '12' ,'Isi Deskripsi dari Archive'],
                          'nama'       :['hidden',      '12' ,expoModelTitel],
                          'categori'   :['hidden',      '12' ,'archive'],
                          'keyid'      :['hidden',      '12' ,property[1]],
                          'nmtabel'    :['hidden',      '12' ,setPackageTabel],
                      },
            });
       } else if (property[0]=='spam') {
        setModal({
           'titel':expoModelTitel,
           'width':'500px',
           'key'  :property[1],
           'model':expoModel,
           'route':setPackage,
           'tabel':setPackageTabel,
           'content':'fromAction',
           'element':"from",
           'page'   :read['limit'],
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :true,
                       'tabel'    :'apparchive',
                       'segment'  :'bookmark',
                       'az'       :'a',
                       'key'      :'add',
                       'model'    :expoModel,
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :1,
                     },
                     action      :{
                          'deskripsi'  :['textarea',    '12' ,'Isi Deskripsi dari Spam'],
                          'nama'       :['hidden',      '12' ,expoModelTitel],
                          'categori'   :['hidden',      '12' ,'spam'],
                          'keyid'      :['hidden',      '12' ,property[1]],
                          'nmtabel'    :['hidden',      '12' ,setPackageTabel],
                      },
            });
       } else if (property[0]=='bookmark') {
   
       setModal({
           'titel':'Bookmark',
           'width':'500px',
           'key'  :property[1],
           'model':'Bookmark',
           'route':setPackage,
           'tabel':setPackageTabel,
           'content':'fromAction',
           'element':'from',
           'page'   :1,
           'setdata' :'public',
          });
           setFrom({
                     "storage"      :{
                       'label'    :true,
                       'tabel'    :'apparchive',
                       'segment'  :'book',
                       'az'       :'boo',
                       'key'      :property[1],
                       'model'    :'Bookmark',
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :1,
                     },
                     "action"      :{
                          'nama'            :['text',  '12' ,'Deskripsi'],
                          'deskripsi'       :['link',  '8' ,'URL Link'],
                          'categori'        :['hidden',      '12' ,'bookmark'],
                          'bookmark'        :['select','4','Categori','custom',['Link','youtube','facebook','github']],
    
                      },
            });


     } else if (property[0]=='label') {
        setModal({
           'titel':expoModelTitel,
           'width':'400px',
           'key'  :property[1],
           'model':expoModel,
           'route':setPackage,
           'tabel':setPackageTabel,
           'content':'fromAction',
           'element':"from",
           'page'   :read['limit'],
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :true,
                       'tabel'    :'apparchive',
                       'segment'  :'bookmark',
                       'az'       :'a',
                       'key'      :'add',
                       'model'    :expoModel,
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :1,
                     },
                     action      :{
                          'deskripsi'  :['text',        '12' ,'Isi Deskripsi dari '+property[4]],
                          'nama'       :['hidden',      '12' ,expoModelTitel],
                          'categori'   :['hidden',      '12' ,property[3]],
                          'keyid'      :['hidden',      '12' ,property[1]],
                          'nmtabel'    :['hidden',      '12' ,setPackageTabel],
                      },
            });




     } else if (property[0]=='downloadfile') {
        console.log(property[0])
     } else if (property[0]=='myOffice') {
        // console.log(tatiyeNet)
        // console.log(tatiyeNet.host+'/office/'+rowsetIData['fileType'])
        //         setIndexedDB({
        //                'item' :'put', //add,put,get
        //                'data' :{
        //                   'id'  : 'office',
        //                   'storage':rowsetIData,
        //                }
        //              })

            history.replaceState('setRhref', '', tatiyeNet.host+'/office/'+rowsetIData['fileType']+'#'+rowsetIData['setToken']);
          
             $.ajax({
                        type: 'POST',
                         url: tatiyeNet.routes+'/resquire/pec/office/'+rowsetIData['fileType'],
                         data: 'key='+rowsetIData['setToken'],
                         beforeSend: function() {
                          $("#mainRoute").html(itemSpinner());    
                        },
                        success: function(data) {
                           $("#mainRoute").html(data);
                       }
                   }); 
                   // var JSONdata = JSON.parse(rowsetIData) 
                   console.log(rowsetIData)

               

     } else if (property[0]=='newlabel') {
     setModal({
           'titel':'Buat Label',
           'width':'300px',
           'key'  :property[1],
           'model':'Label',
           'route':setPackage,
           'tabel':'appindikator',
           'content':'fromAction',
           'element':'from',
           'page'   :1,
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :true,
                       'tabel'    :'appindikator',
                       'segment'  :'indikator',
                       'az'       :'a',
                       'key'      :property[1],
                       'model'    :expoModel,
                       'route'    :'devices',
                       'content'  :'from', 
                       'page'     :1,
                     },
                     action      :{
                          'name'       :['text',        '12' ,'Nama Label'],
                          'value'      :['hidden',      '12' ,'label'],
                      },
            });
       } else if (property[0]=='query') {
           setModal({
           'titel':expoModelTitel,
           'width':'500px',
           'key'  :property[1],
           'model':expoModel,
           'route':'office',
           'tabel':'appoffice',
           'content':'fromAction',
           'element':"from",
           'page'   :read['limit'],
           'setdata' :privacy,
          });
           setFrom({
                     storage      :{
                       'label'    :true,
                       'tabel'    :'appoffice',
                       'segment'  :'fromquery1',
                       'az'       :'q',
                       'key'      :'add',
                       'model'    :expoModel,
                       'route'    :'office',
                       'content'  :'codeMirror', 
                       'page'     :1,
                     },
                     action      :{
                          'setQuery'   :['texquery',     '12',rowsetIData['setQuery']],
                          'keyid'      :['hidden',      '12' ,property[1]],
                         
                      },
            });
       } else if (property[0]=='route') {
            setModal({
              'titel':expoModelTitel,
              'width':property[3],
              'key'  :property[1],
              'model':expoModel,
              'route':property[4],
              'tabel':setPackageTabel,
              'content':'modal',
              'element':'get',
              'page'   :read['limit'],
              'setdata' :privacy,
             });
         } else if (property[0]=='stack') {
            console.log(property[4])
           
             setModal({
                  'titel':expoModelTitel,
                  'width':read['storage'][2],
                  'key'  :property[1],
                  'model':expoModel,
                  'route':setPackage,
                  'tabel':setPackageTabel,
                  'content':'fromAction',
                  'element':property[0],
                  'page'   :read['limit'],
                  'setdata' :privacy,
                 });
            
                               setFrom({
                                  "storage"      :{
                                    'label'    :true,
                                    'tabel'    :setPackageTabel,
                                    'segment'  :data.segment+'stack',
                                    'az'       :read['storage'][1],
                                    'key'      :property[1],
                                    'model'    :expoModel,
                                    'route'    :setPackage,
                                    'content'  :'from', //Outside,QuickSend 
                                    'page'     :read['limit'],
                                    'setdata'  :privacy //public,privacy 
                                  },
                                  "action"      :data.storage.stack.action,
                               });
             } else if (property[0]=='recycle' || property[0]=='delete') {
                     setModal({
                       'titel':expoModelTitel,
                       'width':'300px',
                       'key'  :property[1],
                       'model':expoModel,
                       'route':false,
                       'tabel':setPackageTabel,
                       'content':property[0],
                       'page'   :1,
                       'setdata' :privacy,
                      });
               } else if (property[0]=='pridRaw') {
                         setModal({
                             'titel':expoModelTitel,
                             'width':read['storage'][2],
                             'key'  :property[1],
                             'model':expoModel,
                             'route':false,
                             'tabel':false,
                             'content':'fromAction',
                             'element':property[0],
                             'page'   :1,
                             'setdata' :privacy,
                            });

                       app.myfromModal({
                           storage      :{
                             'label'    :false,
                             'tabel'    :setPackageTabel,
                             'segment'  :read['pridRaw']['segment'],
                             'az'       :read['storage'][1],
                             'key'      :property[1],
                             'model'    :expoModel,
                             'route'    :setPackage,
                             'content'  :'pridRaw',
                             'element'  :property[0],
                             'prind'    :'/raw/'+setPackage+'/'+property[3],
                             'page'     :1,
                             'setdata'  :privacy //public,privacy 
                           },
                           action      :read['pridRaw']['action'],
                        });
             } else if (property[0]=='upload' 
                        || property[0]=='document'
                        || property[0]=='dompdf'
                        //|| property[0]=='pridRaw'
                        || property[0]=='import') {
                             if (property[0]=='document') {
                                var doc='file';
                                var element='uploadFile';
                                var segment=false;
                                var syntax='';
                                var az=false;
                                var width='400px';
                             } else if (property[0]=='import') {
                                var segment='msexcel';
                                var element='office';
                                var doc='import';
                                var syntax=property[3]
                                var az=false;
                                 var width='400px';
                             } else if (property[0]=='dompdf') {
                              // console.log(property)
                                var segment=property[4];
                                var element='dompdf';
                                var doc='import';
                                var syntax=''
                                var az=property[3]
                                var width=property[5];
                             } else {
                                var doc='images';
                                var segment=false;
                                var element=property[0]
                                var syntax='';
                                var az=false;
                                var width='400px';
                             }
                            setModal({
                                 'titel':expoModelTitel,
                                 'width':width,
                                 'key'  :property[1],
                                 'model':expoModel,
                                 'route':setPackage,
                                 'tabel':setPackageTabel,
                                 'content':'fromAction',
                                 'element':element,
                                 'page'   :read['limit'],
                                 'setdata' :privacy,
                                });
                              setFrom({
                               storage      :{
                                 'headerId' :expoModelTitel,
                                 'label'    :false,
                                 'tabel'    :setPackageTabel,
                                 'segment'  :segment,
                                 'az'       :az,
                                 'key'      :property[1],
                                 'model'    :expoModel,
                                 'route'    :setPackage,
                                 'content'  :element, //Outside,QuickSend 
                                 'page'     :read['limit'],
                                 'setdata'  :privacy, //public,privacy 
                                 'syntax'   :syntax
                               },
                                   action      :{
                                       'filename'    :[doc,  '12' ,'Images']
                                     }
                            });
                }
};
